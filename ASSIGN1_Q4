import pandas as pd
import scipy.stats as st

# read csv into a DataFrame

df = pd.read_csv(r'C:\temp\deadfishies2.csv')


df1 = df[df["Mercury"] > 0.4]
df2 = df[df["Mercury"] > 1]


# select relevant column from each DataFrame
sample1 = df1['Mercury'].to_numpy()
sample2 = df2['Mercury'].to_numpy()

# print values in samples
print("Sample 1: ", sample1)
print("Sample 2: ", sample2)



# compute basic statistics for two samples
print("\n Computing basic statistics of samples ...")

# the basic statistics of sample 1:
x_bar1 = st.tmean(sample1)
s1 = st.tstd(sample1)
n1 = len(sample1)
print("\t Statistics of sample 1: %.3f (mean), %.3f (std. dev.), and %d (n)." % (x_bar1, s1, n1))

# the basic statistics of sample 2:
x_bar2 = st.tmean(sample2)
s2 = st.tstd(sample2)
n2 = len(sample2)
print("\t Statistics of sample 2: %.3f (mean), %.3f (std. dev.), and %d (n)." % (x_bar2, s2, n2))



# perform two-sample t-test
# null hypothesis: mean of sample 1 = mean of sample 2
# alternative hypothesis: mean of sample 1 is greater than mean of sample 2 (one-sided test)
# note the argument equal_var=False, which assumes that two populations do not have equal variance
#t_stats, p_val = st.ttest_ind_from_stats(x_bar1, s1, n1, x_bar2, s2, n2, equal_var=False, alternative='more')
t_stats, p_val = st.ttest_ind_from_stats(x_bar1, s1, n1, x_bar2, s2, n2, equal_var=False)
print("\n Computing t* ...")
print("\t t-statistic (t*): %.2f" % t_stats)

print("\n Computing p-value ...")
print("\t p-value: %.4f" % p_val)

print("\n Conclusion:")
if p_val < 0.05:
    print("\t We reject the null hypothesis.")
else:
    print("\t We accept the null hypothesis.")
